<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Low-Rank-Factorization on Practical ML</title>
    <link>https://arikpoz.github.io/tags/low-rank-factorization/</link>
    <description>Recent content in Low-Rank-Factorization on Practical ML</description>
    <image>
      <title>Practical ML</title>
      <url>https://arikpoz.github.io/images/papermod-cover.png</url>
      <link>https://arikpoz.github.io/images/papermod-cover.png</link>
    </image>
    <generator>Hugo -- 0.147.2</generator>
    <language>en</language>
    <lastBuildDate>Tue, 29 Apr 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://arikpoz.github.io/tags/low-rank-factorization/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Low-Rank Factorization in PyTorch: Compressing Neural Networks with Linear Algebra</title>
      <link>https://arikpoz.github.io/posts/2025-04-29-low-rank-factorization-in-pytorch-compressing-neural-networks-with-linear-algebra/</link>
      <pubDate>Tue, 29 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://arikpoz.github.io/posts/2025-04-29-low-rank-factorization-in-pytorch-compressing-neural-networks-with-linear-algebra/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;&amp;ldquo;Diagram of low-rank factorization compressing ResNet50, showing 93% size reduction, 10% lower latency, and 3.5% accuracy drop.&amp;rdquo;&#34; loading=&#34;lazy&#34; src=&#34;https://arikpoz.github.io/posts/2025-04-29-low-rank-factorization-in-pytorch-compressing-neural-networks-with-linear-algebra/lead-image.jpg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Can we shrink neural networks without sacrificing much accuracy?
Low-rank factorization is a powerful, often overlooked technique that compresses models by decomposing large weight matrices into smaller components.&lt;/p&gt;
&lt;p&gt;In this post, we&amp;rsquo;ll explain what low-rank factorization is, show how to apply it to a ResNet50 model in PyTorch, and evaluate the trade-offs.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
